
@{
    ViewBag.Title = "Quản Lý Đơn Hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model  LibraryWeb.Models.author

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Danh sách tác giả</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <div class="x_content">
                <br>
                <div class="pull-right">
                    <button class="btn btn-success" onclick="addAuthor()"><span><i class="fa fa-plus"></i></span> Mươn sách</button>
                </div>

                <table id="viewAuthorDT" class="table table-bordered">
                    <thead>
                    <th class="text-center w-10">@Html.DisplayNameFor(model => model.author_id)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.author_name)</th>
                    <th class="text-center"></th>
                    </thead>
                    <tbody>
                     
                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>


@*Modal thêm sửa tác giả*@


@section Scripts
{
    @*<script>
        var AuthorDT;
        setViewAuthorDT() {
            AuthorDT = $('#viewAuthorDT
        function ').DataTable({
                "aaSorting": [],
                "language": languageSettingDT,
            });
        }

        $(document).ready(function () {
            setViewAuthorDT();
        });

        $('#modalAuthor').on('hidden.bs.modal', function () {

            $('#modalAuthor input').val("");
        });

        $("#formAddAuthor").validate({
            rules: {
                authorName: {
                    required: true,
                    minlength: 3,
                    maxlength: 60
                }
            },
            messages: {
                authorName: {
                    required: "Họ tên tác giả không được bỏ trống !",
                    minlength: "Họ tên không dưới 3 kí tự !",
                    maxlength: "Họ tên không quá 60 kí tự !",
                }
            }

        });
    </script>

    <script>
        function addAuthor() {
            $('#modalAuthor').modal('show');
        }

        function viewDetailAuthor(id)
        {
            $('#dAuthor-' + id).toggle('slow');
        }

        function getAuthorForEdit(id) {
            $('#modalAuthor input[name="authorId"]').val(id);
            $.ajax({
                url: '/Author/GetOneAuthor',
                type: 'POST',
                data: { authorId: id },
                success: function (data) {
                    $('#modalAuthor').modal('show');
                    $('#modalAuthor input[name = "authorName"]').val(data['author_name']);
                    console.log(data);
                },
                error: function () {
                    /* Act on the event */
                }
            })
        }


        function removeAuthor(id) {

            if (confirm("Tác giả chỉ có thể xóa khi không tồn tại cuốn sách nào thuộc tác giả này !\nBạn chắc chắn !")) {
                $.ajax({
                    url: '/Author/AjaxRemoveAuthor',
                    type: 'POST',
                    data: { authorId: id },
                    success: function (data) {
                        if (data.Status) {
                            AuthorDT.rows('#author-' + id).remove().draw();
                            showNotify("", data.Msg, 'bg-sussess');
                        }
                        else {
                            showNotify("", data.Msg, 'bg-danger');
                        }

                    },
                    error: function () {
                        /* Act on the event */
                    }
                })
            }

        }
    </script>*@
}

